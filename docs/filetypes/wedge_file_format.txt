
*****************************************
* Format Specification for .wedge Files *
*****************************************

Written by Eric Turner
elturner@eecs.berkeley.edu
May 15, 2014

***********
* Purpose *
***********

This document describes the file format for .wedge files, which are used
to store lists of scan wedge computations. 

Each wedge is the volume between four scan points from a scanner.  Two
adjacent scan points in a frame, then the same two indices in the next
frame make up this volume.

Each wedge file is created along with a .carvemap file, which stores
the actual probability distributions of each point.  The wedge file contains
indices to carvemaps, which reference the contents of this .carvemap file.

***************
* Conventions *
***************

All distances and positions are in units of meters.

All values are stored in binary, in little-endian ordering.

**********
* Format *
**********

The file contains a header, followed by a list of scan point indices.

The header is represented by the following:

-------------------------------------------------------------------
value     type                 size       description
-------------------------------------------------------------------
magic     string               6 bytes    The literal "wedge\0"
num       size_t               8 bytes    Number of wedges in file
buf       double               8 bytes    Carving buffer, units of std. devs
-------------------------------------------------------------------

Following the header is the list of wedge values.  Each wedge is
represented with the following:

-------------------------------------------------------------------
value           type             size       description
-------------------------------------------------------------------
frame_a_index   unsigned int     4 bytes    Index of first frame to use
point_a1_index  unsigned int     4 bytes    First frame's first point
point_a2_index  unsigned int     4 bytes    First frame's second point
frame_b_index   unsigned int     4 bytes    Index of second frame to use
frame_b1_index  unsigned int     4 bytes    Second frame's first point
frame_b2_index  unsigned int     4 bytes    Second frame's second point
-------------------------------------------------------------------
Total size of a wedge on disk:  6*4 bytes = 24 bytes

